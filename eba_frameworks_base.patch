From dddcc410f0877252b221a7b0da5a8eebf0d211ae Mon Sep 17 00:00:00 2001
From: nebkat <nebkat@teamhacksung.org>
Date: Wed, 22 Feb 2012 21:56:46 +0000
Subject: [PATCH] Electron Beam Animation (1/3 Frameworks-base)

Conflicts:
	core/res/res/values/config.xml
	services/java/com/android/server/PowerManagerService.java
	services/jni/com_android_server_PowerManagerService.cpp
	services/surfaceflinger/SurfaceFlinger.cpp

Patchset 1: Initial changes
Patchset 2: Fix build, screen on animation not implemented yet

Signed-off-by: Michael Bestas <mikeioannina@gmail.com>

Change-Id: I6e6f748dd4c9e19d375d36bf3c06fa913d7a2a3e
---
 .../com/android/server/PowerManagerService.java    |   32 ++++++++++++++------
 .../jni/com_android_server_PowerManagerService.cpp |   14 +++++++--
 2 files changed, 34 insertions(+), 12 deletions(-)

diff --git a/services/java/com/android/server/PowerManagerService.java b/services/java/com/android/server/PowerManagerService.java
index 588b9f3..adfa160 100644
--- a/services/java/com/android/server/PowerManagerService.java
+++ b/services/java/com/android/server/PowerManagerService.java
@@ -62,6 +62,8 @@ import android.util.Slog;
 import android.view.WindowManagerPolicy;
 import static android.view.WindowManagerPolicy.OFF_BECAUSE_OF_PROX_SENSOR;
 import static android.provider.Settings.System.DIM_SCREEN;
+import static android.provider.Settings.System.ELECTRON_BEAM_ANIMATION_ON;
+import static android.provider.Settings.System.ELECTRON_BEAM_ANIMATION_OFF;
 import static android.provider.Settings.System.SCREEN_BRIGHTNESS;
 import static android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE;
 import static android.provider.Settings.System.SCREEN_AUTO_BRIGHTNESS_ADJ;
@@ -180,6 +182,9 @@ public class PowerManagerService extends IPowerManager.Stub
     // animate screen lights in PowerManager (as opposed to SurfaceFlinger)
     boolean mAnimateScreenLights = true;
 
+    boolean mElectronBeamAnimationOn = false;
+    boolean mElectronBeamAnimationOff = false;
+
     static final int ANIM_STEPS = 60; // nominal # of frames at 60Hz
     // Slower animation for autobrightness changes
     static final int AUTOBRIGHTNESS_ANIM_STEPS = 2 * ANIM_STEPS;
@@ -355,7 +360,8 @@ public class PowerManagerService extends IPowerManager.Stub
 
     private native void nativeInit();
     private native void nativeSetPowerState(boolean screenOn, boolean screenBright);
-    private native void nativeStartSurfaceFlingerAnimation(int mode);
+    private native void nativeStartSurfaceFlingerOffAnimation(int mode);
+    private native void nativeStartSurfaceFlingerOnAnimation(int mode);
     private static native void nativeAcquireWakeLock(int lock, String id);
     private static native void nativeReleaseWakeLock(String id);
     private static native int nativeSetScreenState(boolean on);
@@ -566,15 +572,20 @@ public class PowerManagerService extends IPowerManager.Stub
                 // recalculate everything
                 setScreenOffTimeoutsLocked();
 
-                mWindowScaleAnimation = getFloat(WINDOW_ANIMATION_SCALE, 1.0f);
-                final float transitionScale = getFloat(TRANSITION_ANIMATION_SCALE, 1.0f);
+                //read user settings and device config to control animations availability
+                mElectronBeamAnimationOn = (Settings.System.getInt(mContext.getContentResolver(),
+                        ELECTRON_BEAM_ANIMATION_ON, 0) != 0) &&
+                        mContext.getResources().getInteger(com.android.internal.R.integer.config_screenOnAnimation) >= 0;
+                mElectronBeamAnimationOff = (Settings.System.getInt(mContext.getContentResolver(),
+                        ELECTRON_BEAM_ANIMATION_OFF, 1) != 0) &&
+                        mContext.getResources().getBoolean(com.android.internal.R.bool.config_screenOffAnimation);
+
                 mAnimationSetting = 0;
-                if (mWindowScaleAnimation > 0.5f) {
+                if (mElectronBeamAnimationOff) {
                     mAnimationSetting |= ANIM_SETTING_OFF;
                 }
-                if (transitionScale > 0.5f) {
-                    // Uncomment this if you want the screen-on animation.
-                    // mAnimationSetting |= ANIM_SETTING_ON;
+                if (mElectronBeamAnimationOn) {
+                    mAnimationSetting |= ANIM_SETTING_ON;
                 }
             }
         }
@@ -715,10 +726,13 @@ public class PowerManagerService extends IPowerManager.Stub
                         + Settings.System.NAME + "=?) or ("
                         + Settings.System.NAME + "=?) or ("
                         + Settings.System.NAME + "=?) or ("
+                        + Settings.System.NAME + "=?) or ("
+                        + Settings.System.NAME + "=?) or ("
                         + Settings.System.NAME + "=?)",
                 new String[]{STAY_ON_WHILE_PLUGGED_IN, SCREEN_OFF_TIMEOUT, DIM_SCREEN, SCREEN_BRIGHTNESS,
                         SCREEN_BRIGHTNESS_MODE, /*SCREEN_AUTO_BRIGHTNESS_ADJ,*/
-                        WINDOW_ANIMATION_SCALE, TRANSITION_ANIMATION_SCALE, Settings.System.LIGHTS_CHANGED},
+                        WINDOW_ANIMATION_SCALE, TRANSITION_ANIMATION_SCALE, Settings.System.LIGHTS_CHANGED,
+                        ELECTRON_BEAM_ANIMATION_ON, ELECTRON_BEAM_ANIMATION_OFF},
                 null);
         mSettings = new ContentQueryMap(settingsCursor, Settings.System.NAME, true, mHandler);
         SettingsObserver settingsObserver = new SettingsObserver();
@@ -2333,7 +2347,7 @@ public class PowerManagerService extends IPowerManager.Stub
                         animateInternal(mask, false, delay);
                     } else if (msg.what == ANIMATE_POWER_OFF) {
                         int mode = msg.arg1;
-                        nativeStartSurfaceFlingerAnimation(mode);
+                        nativeStartSurfaceFlingerOffAnimation(mode);
                     }
                 }
             };
diff --git a/services/jni/com_android_server_PowerManagerService.cpp b/services/jni/com_android_server_PowerManagerService.cpp
index 2c25b1f..a05bb66 100644
--- a/services/jni/com_android_server_PowerManagerService.cpp
+++ b/services/jni/com_android_server_PowerManagerService.cpp
@@ -143,12 +143,18 @@ static void nativeSetPowerState(JNIEnv* env,
     gScreenBright = screenBright;
 }
 
-static void nativeStartSurfaceFlingerAnimation(JNIEnv* env,
+static void nativeStartSurfaceFlingerOffAnimation(JNIEnv* env,
         jobject obj, jint mode) {
     sp<ISurfaceComposer> s(ComposerService::getComposerService());
     s->turnElectronBeamOff(mode);
 }
 
+static void nativeStartSurfaceFlingerOnAnimation(JNIEnv* env,
+        jobject obj, jint mode) {
+    sp<ISurfaceComposer> s(ComposerService::getComposerService());
+    s->turnElectronBeamOn(mode);
+}
+
 static void nativeAcquireWakeLock(JNIEnv *env, jobject clazz, jint lock, jstring idObj) {
     if (idObj == NULL) {
         jniThrowNullPointerException(env, "id is null");
@@ -223,8 +229,10 @@ static JNINativeMethod gPowerManagerServiceMethods[] = {
             (void*) nativeInit },
     { "nativeSetPowerState", "(ZZ)V",
             (void*) nativeSetPowerState },
-    { "nativeStartSurfaceFlingerAnimation", "(I)V",
-            (void*) nativeStartSurfaceFlingerAnimation },
+    { "nativeStartSurfaceFlingerOffAnimation", "(I)V",
+            (void*) nativeStartSurfaceFlingerOffAnimation },
+    { "nativeStartSurfaceFlingerOnAnimation", "(I)V",
+            (void*) nativeStartSurfaceFlingerOnAnimation },
     { "nativeAcquireWakeLock", "(ILjava/lang/String;)V",
             (void*) nativeAcquireWakeLock },
     { "nativeReleaseWakeLock", "(Ljava/lang/String;)V",
-- 
1.7.10.4

