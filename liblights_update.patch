From 1a5268d47c7320ebf1d88d4fb7dab52e3dc42c08 Mon Sep 17 00:00:00 2001
From: Alin Jerpelea <jerpelea@gmail.com>
Date: Sat, 9 Mar 2013 08:49:13 +0200
Subject: [PATCH] msm7x30: typo fix

Change-Id: I82ed70e722bf6b55e6453d1036b3fb5296217290
---
 liblights/lights.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/liblights/lights.h b/liblights/lights.h
index dd813d5..be0f300 100644
--- a/liblights/lights.h
+++ b/liblights/lights.h
@@ -3,8 +3,8 @@ char const*const GREEN_LED_FILE = "/sys/class/leds/green/brightness";
 char const*const BLUE_LED_FILE 	= "/sys/class/leds/blue/brightness";
 
 char const*const LED_FILE_TRIGGER[] = {
- "/sys/class/leds/red/trigger"
- "/sys/class/leds/green/trigger"
+ "/sys/class/leds/red/trigger",
+ "/sys/class/leds/green/trigger",
  "/sys/class/leds/blue/trigger"
 };
 
-- 
1.7.10.4

From 5714198ddbd160d4e7ec86de8082e15bedb40ae1 Mon Sep 17 00:00:00 2001
From: Alin Jerpelea <jerpelea@gmail.com>
Date: Thu, 7 Mar 2013 17:53:36 +0200
Subject: [PATCH] msm7x30: liblights update

Change-Id: I50b8a38e797b68699beec3cfe2894c1d8dd4e1c3
---
 liblights/lights.c |   60 +++++++++++++++++++++++-----------------------------
 liblights/lights.h |   34 +++++++++++++++++------------
 2 files changed, 46 insertions(+), 48 deletions(-)

diff --git a/liblights/lights.c b/liblights/lights.c
index 1125ef4..df971bb 100644
--- a/liblights/lights.c
+++ b/liblights/lights.c
@@ -1,7 +1,7 @@
 /*
  * Copyright (C) 2008 The Android Open Source Project
  * Copyright (C) 2011 Diogo Ferreira <defer@cyanogenmod.com>
- * Copyright (C) 2011 The CyanogenMod Project <http://www.cyanogenmod.com>
+ * Copyright (C) 2012 The CyanogenMod Project <http://www.cyanogenmod.org>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -108,7 +108,7 @@ static int set_light_backlight (struct light_device_t *dev, struct light_state_t
 
 	ALOGV("%s brightness=%d", __func__, brightness);
 	pthread_mutex_lock(&g_lock);
-	err = write_int (LCD_BACKLIGHT_FILE, brightness);
+	err |= write_int (LCD_BACKLIGHT_FILE, brightness);
 	pthread_mutex_unlock(&g_lock);
 	return err;
 }
@@ -137,7 +137,7 @@ static int set_light_keyboard(struct light_device_t* dev, struct light_state_t c
 }
 
 static void set_shared_light_locked (struct light_device_t *dev, struct light_state_t *state) {
-	int r, g, b;
+	int r, g, b, i;
 	int delayOn,delayOff;
 
 	r = (state->color >> 16) & 0xFF;
@@ -147,22 +147,21 @@ static void set_shared_light_locked (struct light_device_t *dev, struct light_st
 	delayOn = state->flashOnMS;
 	delayOff = state->flashOffMS;
 
-	if (state->flashMode != LIGHT_FLASH_NONE) {
-		write_string (RED_LED_FILE_TRIGGER, "timer");
-		write_string (GREEN_LED_FILE_TRIGGER, "timer");
-		write_string (BLUE_LED_FILE_TRIGGER, "timer");
-
-		write_int (RED_LED_FILE_DELAYON, delayOn);
-		write_int (GREEN_LED_FILE_DELAYON, delayOn);
-		write_int (BLUE_LED_FILE_DELAYON, delayOn);
-
-		write_int (RED_LED_FILE_DELAYOFF, delayOff);
-		write_int (GREEN_LED_FILE_DELAYOFF, delayOff);
-		write_int (BLUE_LED_FILE_DELAYOFF, delayOff);
-	} else {
-		write_string (RED_LED_FILE_TRIGGER, "none");
-		write_string (GREEN_LED_FILE_TRIGGER, "none");
-		write_string (BLUE_LED_FILE_TRIGGER, "none");
+	switch (state->flashMode) {
+	case LIGHT_FLASH_TIMED:
+	case LIGHT_FLASH_HARDWARE:
+		for (i = 0; i < sizeof(LED_FILE_TRIGGER)/sizeof(LED_FILE_TRIGGER[0]); i++) {
+			write_string (LED_FILE_TRIGGER[i], "timer");
+			write_int (LED_FILE_DELAYON[i], delayOn);
+			write_int (LED_FILE_DELAYOFF[i], delayOff);
+		}
+		break;
+
+	case LIGHT_FLASH_NONE:
+		for (i = 0; i < sizeof(LED_FILE_TRIGGER)/sizeof(LED_FILE_TRIGGER[0]); i++) {
+			write_string (LED_FILE_TRIGGER[i], "none");
+		}
+		break;
 	}
 
 	write_int (RED_LED_FILE, r);
@@ -171,11 +170,10 @@ static void set_shared_light_locked (struct light_device_t *dev, struct light_st
 }
 
 static void handle_shared_battery_locked (struct light_device_t *dev) {
-	if (is_lit (&g_notification)) {
+	if (is_lit (&g_notification))
 		set_shared_light_locked (dev, &g_notification);
-	} else {
+	else
 		set_shared_light_locked (dev, &g_battery);
-	}
 }
 
 static int set_light_battery (struct light_device_t *dev, struct light_state_t const* state) {
@@ -212,24 +210,18 @@ static int open_lights (const struct hw_module_t* module, char const* name,
 	int (*set_light)(struct light_device_t* dev,
 					 struct light_state_t const *state);
 
-	if (0 == strcmp(LIGHT_ID_BACKLIGHT, name)) {
+	if (0 == strcmp(LIGHT_ID_BACKLIGHT, name))
 		set_light = set_light_backlight;
-	}
-	else if (0 == strcmp(LIGHT_ID_KEYBOARD, name)) {
+	else if (0 == strcmp(LIGHT_ID_KEYBOARD, name))
 		set_light = set_light_keyboard;
-	}
-	else if (0 == strcmp(LIGHT_ID_BUTTONS, name)) {
+	else if (0 == strcmp(LIGHT_ID_BUTTONS, name))
 		set_light = set_light_buttons;
-	}
-	else if (0 == strcmp(LIGHT_ID_BATTERY, name)) {
+	else if (0 == strcmp(LIGHT_ID_BATTERY, name))
 		set_light = set_light_battery;
-	}
-	else if (0 == strcmp(LIGHT_ID_NOTIFICATIONS, name)) {
+	else if (0 == strcmp(LIGHT_ID_NOTIFICATIONS, name))
 		set_light = set_light_notifications;
-	}
-	else {
+	else
 		return -EINVAL;
-	}
 
 	pthread_once (&g_init, init_globals);
 	struct light_device_t *dev = malloc(sizeof (struct light_device_t));
diff --git a/liblights/lights.h b/liblights/lights.h
index 1ba8e1f..dd813d5 100644
--- a/liblights/lights.h
+++ b/liblights/lights.h
@@ -1,18 +1,24 @@
-char const*const RED_LED_FILE 			= "/sys/class/leds/red/brightness";
-char const*const GREEN_LED_FILE 		= "/sys/class/leds/green/brightness";
-char const*const BLUE_LED_FILE 			= "/sys/class/leds/blue/brightness";
+char const*const RED_LED_FILE 	= "/sys/class/leds/red/brightness";
+char const*const GREEN_LED_FILE = "/sys/class/leds/green/brightness";
+char const*const BLUE_LED_FILE 	= "/sys/class/leds/blue/brightness";
 
-char const*const RED_LED_FILE_TRIGGER	  = "/sys/class/leds/red/trigger";
-char const*const GREEN_LED_FILE_TRIGGER	= "/sys/class/leds/green/trigger";
-char const*const BLUE_LED_FILE_TRIGGER	= "/sys/class/leds/blue/trigger";
+char const*const LED_FILE_TRIGGER[] = {
+ "/sys/class/leds/red/trigger"
+ "/sys/class/leds/green/trigger"
+ "/sys/class/leds/blue/trigger"
+};
 
-char const*const RED_LED_FILE_DELAYON	= "/sys/class/leds/red/delay_on";
-char const*const GREEN_LED_FILE_DELAYON	= "/sys/class/leds/green/delay_on";
-char const*const BLUE_LED_FILE_DELAYON	= "/sys/class/leds/blue/delay_on";
+char const*const LED_FILE_DELAYON[] = {
+ "/sys/class/leds/red/delay_on",
+ "/sys/class/leds/green/delay_on",
+ "/sys/class/leds/blue/delay_on"
+};
 
-char const*const RED_LED_FILE_DELAYOFF	= "/sys/class/leds/red/delay_off";
-char const*const GREEN_LED_FILE_DELAYOFF	= "/sys/class/leds/green/delay_off";
-char const*const BLUE_LED_FILE_DELAYOFF	= "/sys/class/leds/blue/delay_off";
+char const*const LED_FILE_DELAYOFF[] = {
+ "/sys/class/leds/red/delay_off",
+ "/sys/class/leds/green/delay_off",
+ "/sys/class/leds/blue/delay_off"
+};
 
 char const*const BUTTON_BACKLIGHT_FILE[] = {
   "/sys/class/leds/button-backlight/brightness",
@@ -22,6 +28,6 @@ char const*const BUTTON_BACKLIGHT_FILE[] = {
 
 char const*const KEYBOARD_BACKLIGHT_FILE = "/sys/class/leds/keyboard-backlight/brightness";
 
-char const*const LCD_BACKLIGHT_FILE	= "/sys/class/leds/lcd-backlight/brightness";
+char const*const LCD_BACKLIGHT_FILE = "/sys/class/leds/lcd-backlight/brightness";
 
-char const*const ALS_FILE	= "/sys/class/leds/lcd-backlight/als/enable";
+char const*const ALS_FILE = "/sys/class/leds/lcd-backlight/als/enable";
-- 
1.7.10.4

