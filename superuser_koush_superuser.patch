diff --git a/Superuser/project.properties b/Superuser/project.properties
index dd3bbf7..6113adc 100644
--- a/Superuser/project.properties
+++ b/Superuser/project.properties
@@ -11,6 +11,6 @@
 #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 # Project target.
-target=android-17
+target=android-16
 android.library.reference.1=../../Widgets/Widgets
 ndk.executable=ndk-build
diff --git a/Superuser/res/layout-land/log_item.xml b/Superuser/res/layout-land/log_item.xml
index 082af7c..8ca6500 100644
--- a/Superuser/res/layout-land/log_item.xml
+++ b/Superuser/res/layout-land/log_item.xml
@@ -3,8 +3,6 @@
     android:layout_width="fill_parent"
     android:layout_height="wrap_content"
     android:orientation="horizontal"
-    android:paddingEnd="@dimen/section_padding"
-    android:paddingStart="@dimen/section_padding"
     android:paddingBottom="@dimen/log_item_padding"
     android:paddingTop="@dimen/log_item_padding" >
 
diff --git a/Superuser/res/values/styles.xml b/Superuser/res/values/styles.xml
index 39ca7f2..4748c43 100644
--- a/Superuser/res/values/styles.xml
+++ b/Superuser/res/values/styles.xml
@@ -66,9 +66,9 @@
     <style name="SuperuserDarkActivity" parent="@style/AppDarkActivityTheme" />
     
     <!-- Want to switch to the dark theme? Change these three styles to Dark. -->
-    <style name="RequestTheme" parent="RequestThemeLight" />
-    <style name="Superuser" parent="SuperuserLight" />
-    <style name="SuperuserActivity" parent="SuperuserLightActivity" />
+    <style name="RequestTheme" parent="RequestThemeDark" />
+    <style name="Superuser" parent="SuperuserDark" />
+    <style name="SuperuserActivity" parent="SuperuserDarkActivity" />
 
     <style name="AppActivityBaseTheme" parent="SuperuserLight" />
     <style name="AppDarkActivityBaseTheme" parent="SuperuserDark" />
diff --git a/Superuser/src/com/koushikdutta/superuser/Helper.java b/Superuser/src/com/koushikdutta/superuser/Helper.java
index 2ef91a3..9a13da9 100644
--- a/Superuser/src/com/koushikdutta/superuser/Helper.java
+++ b/Superuser/src/com/koushikdutta/superuser/Helper.java
@@ -23,7 +23,6 @@ import android.content.Context;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.graphics.drawable.Drawable;
-import android.os.UserManager;
 
 import com.koushikdutta.superuser.util.ImageCache;
 
@@ -43,28 +42,4 @@ public class Helper {
         return null;
     }
 
-    @SuppressLint("NewApi")
-    public static boolean supportsMultipleUsers(Context context) {
-        final UserManager um = (UserManager) context.getSystemService(Context.USER_SERVICE);
-        try {
-            Method supportsMultipleUsers = UserManager.class.getMethod("supportsMultipleUsers");
-            return (Boolean)supportsMultipleUsers.invoke(um);
-        }
-        catch (Exception ex) {
-            return false;
-        }
-    }
-
-    @SuppressLint("NewApi")
-    public static boolean isAdminUser(Context context) {
-        final UserManager um = (UserManager) context.getSystemService(Context.USER_SERVICE);
-        try {
-            Method getUserHandle = UserManager.class.getMethod("getUserHandle");
-            int userHandle = (Integer)getUserHandle.invoke(um);
-            return userHandle == 0;
-        }
-        catch (Exception ex) {
-            return true;
-        }
-    }
 }
diff --git a/Superuser/src/com/koushikdutta/superuser/SettingsFragmentInternal.java b/Superuser/src/com/koushikdutta/superuser/SettingsFragmentInternal.java
index c596c8d..12f417c 100644
--- a/Superuser/src/com/koushikdutta/superuser/SettingsFragmentInternal.java
+++ b/Superuser/src/com/koushikdutta/superuser/SettingsFragmentInternal.java
@@ -182,68 +182,6 @@ public class SettingsFragmentInternal extends BetterListFragmentInternal {
             }
         }).setAttrDrawable(R.attr.toggleIcon);
         
-        if (Settings.getMultiuserMode(getActivity()) != Settings.MULTIUSER_MODE_NONE) {
-            addItem(R.string.security, new ListItem(this, R.string.multiuser_policy, 0) {
-                void update() {
-                    int res = -1;
-                    switch (Settings.getMultiuserMode(getActivity())) {
-                    case Settings.MULTIUSER_MODE_OWNER_MANAGED:
-                        res = R.string.multiuser_owner_managed_summary;
-                        break;
-                    case Settings.MULTIUSER_MODE_OWNER_ONLY:
-                        res = R.string.multiuser_owner_only_summary;
-                        break;
-                    case Settings.MULTIUSER_MODE_USER:
-                        res = R.string.multiuser_user_summary;
-                        break;
-                    }
-                    
-                    if (!Helper.isAdminUser(getActivity())) {
-                        setEnabled(false);
-                        String s = "";
-                        if (res != -1)
-                            s = getString(res) + "\n";
-                        setSummary(s + getString(R.string.multiuser_require_owner));
-                    }
-                    else {
-                        if (res != -1)
-                            setSummary(res);
-                    }
-                }
-                
-                {
-                    update();
-                }
-                
-                @Override
-                public void onClick(View view) {
-                    super.onClick(view);
-                    
-                    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
-                    builder.setTitle(R.string.multiuser_policy);
-                    String[] items = new String[] { getString(R.string.multiuser_owner_only), getString(R.string.multiuser_owner_managed), getString(R.string.multiuser_user) };
-                    builder.setItems(items, new OnClickListener() {
-                        @Override
-                        public void onClick(DialogInterface dialog, int which) {
-                            switch (which) {
-                            case 0:
-                                Settings.setMultiuserMode(getActivity(), Settings.MULTIUSER_MODE_OWNER_ONLY);
-                                break;
-                            case 1:
-                                Settings.setMultiuserMode(getActivity(), Settings.MULTIUSER_MODE_OWNER_MANAGED);
-                                break;
-                            case 2:
-                                Settings.setMultiuserMode(getActivity(), Settings.MULTIUSER_MODE_USER);
-                                break;
-                            }
-                            update();
-                        }
-                    });
-                    builder.create().show();
-                }
-            }).setAttrDrawable(R.attr.multiuserIcon);
-        }
-        
         addItem(R.string.security, new ListItem(this, R.string.declared_permission, R.string.declared_permission_summary) {
             @Override
             public void onClick(View view) {
diff --git a/Superuser/src/com/koushikdutta/superuser/util/Settings.java b/Superuser/src/com/koushikdutta/superuser/util/Settings.java
index 3e1d58b..ea6b240 100755
--- a/Superuser/src/com/koushikdutta/superuser/util/Settings.java
+++ b/Superuser/src/com/koushikdutta/superuser/util/Settings.java
@@ -256,59 +256,9 @@ public class Settings {
     private static final String MULTIUSER_VALUE_USER = "user";
 
     public static final int getMultiuserMode(Context context) {
-        if (Build.VERSION.SDK_INT < 17)
             return MULTIUSER_MODE_NONE;
-
-        if (!Helper.supportsMultipleUsers(context))
-            return MULTIUSER_MODE_NONE;
-        
-        try {
-            String mode;
-            if (Helper.isAdminUser(context)) {
-                File file = context.getFileStreamPath("multiuser_mode");
-                mode = readFile(file);
-            }
-            else {
-                Process p = Runtime.getRuntime().exec("su -u");
-                mode = readToEnd(p.getInputStream()).trim();
-            }
-            
-            if (MULTIUSER_VALUE_OWNER_MANAGED.equals(mode))
-                return MULTIUSER_MODE_OWNER_MANAGED;
-            if (MULTIUSER_VALUE_USER.equals(mode))
-                return MULTIUSER_MODE_USER;
-            if (MULTIUSER_VALUE_OWNER_ONLY.equals(mode))
-                return MULTIUSER_MODE_OWNER_ONLY;
-        }
-        catch (Exception e) {
-        }
-        return MULTIUSER_MODE_OWNER_ONLY;
-    }
-    
-    public static void setMultiuserMode(Context context, int mode) {
-        if (!Helper.isAdminUser(context))
-            return;
-        try {
-            File file = context.getFileStreamPath("multiuser_mode");
-            switch (mode) {
-            case MULTIUSER_MODE_OWNER_MANAGED:
-                writeFile(file, MULTIUSER_VALUE_OWNER_MANAGED);
-                break;
-            case MULTIUSER_MODE_USER:
-                writeFile(file, MULTIUSER_VALUE_USER);
-                break;
-            case MULTIUSER_MODE_NONE:
-                file.delete();
-                break;
-            default:
-                writeFile(file, MULTIUSER_VALUE_OWNER_ONLY);
-                break;
-            }
-        }
-        catch (Exception ex) {
-        }
     }
-    
+        
     
     public static final int SUPERUSER_ACCESS_DISABLED = 0;
     public static final int SUPERUSER_ACCESS_APPS_ONLY = 1;
